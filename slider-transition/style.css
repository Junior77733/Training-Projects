body {
    font-family: "Exo 2";
    background-color:black;
    color:white;
    margin:0;
    font-size:20px;
}

a{
    text-decoration:none;
    color:white;
}

header{
    width: 1140px;  /*for desktop:default*/
    max-width:80%;  /*for mobile devices*/
    margin:auto;   /*to put the header in the middle*/
    height:50px;
    display:flex;
    align-items:center;
    position:relative;
    z-index:100;
}

header a{
    margin-right:40px;
}

.CS{
    width:100vw;
    height:100vh;
    overflow:hidden;
    margin-top:-50px;
    position:relative;
}

.CS .list .item{
    position:absolute;
    inset:0 0 0 0;
}

.CS .list .item img{
    width:100%;
    height:100%;
    object-fit:cover;
}

.CS .list .item .content{
    position:absolute;
    top:20%;
    width:1140px;
    max-width:80%;
    left:50%;
    transform: translateX(-50%);
    padding-right:30%;

    /*Note:A Class that declares width combined with padding needs
    to have box-sizing:border box to NOT have the width change*/

    box-sizing:border-box;
    color:white;
    text-shadow: 0 5px 10px black;
}

.CS .list .item .content .author{
    font-weight:bold;
    letter-spacing:7px;
}

/*add a comma to edit multiple classes at once,
re-targeting them again will give it priority*/

.CS .list .item .content .title,
.CS .list .item .content .topic
{
    font-weight:bold;
    font-size:2em;
    list-style:1.5em;
}

.CS .list .item .content .topic{
    color:lightblue;

}

.CS .list .item .content .buttons{
    display:grid;
    grid-template-columns: repeat(2, 130px);
    grid-template-rows:40px;
    gap:5px;
    margin-top:20px;
}

.CS .list .item .content button{
    letter-spacing:3px;
    font-family:"Exo 2";
    font-weight:500;
    background-color:rgb(240, 248, 255);
}

/*RANDOM Button*/
.CS .list .item .content button:nth-child(2){
    background:linear-gradient(to right, white,black);
    border-style:solid;
    border-width:2px;
    border-color:black;
}

.thumbnail{
    position:absolute;
    bottom:50px;
    left:50%;
    width: max-content;
    z-index:100;
    display:flex; /*Do this so that the items inside are in the same row*/
    gap:20px;
}

.thumbnail .item{
    width:150px;
    height:220px;
    flex-shrink:0; /*items won't shrink*/
    position: relative;
}

.thumbnail .item img{
    width:100%;
    height:100%;
    object-fit:cover;
    border-radius:20px;
}

.thumbnail .item .content{
    position: absolute;
    bottom:10px;
    left:10px;
    right:10px;
}

.thumbnail .item .content .title{
    font-weight:bold;
}

.arrows{
    position:absolute;
    top:80%;
    right:52%;
    width:300px;
    max-width:30%;
    display:flex; /*to keep them in the same row*/
    gap:15px;
}

.arrows button{
    width:40px;
    height:40px;
    border-radius:50%;
    background-color:black;
    color:white;
    border:none;
    font-family:monospace;
    font-weight:bold;
    font-size:large;
    transition: .5s;
    cursor:pointer;
    z-index:100;
}

.arrows button:hover{
    background-color:white;
    color:black;
}

.arrows button:active{
    width:45px;
    height:45px;
    gap:2px;
}


/*the 1st item will overlap*/
.CS .list .item:nth-child(1){
    z-index:1;
}

.CS .list .item:nth-child(1) .author,
.CS .list .item:nth-child(1) .title,
.CS .list .item:nth-child(1) .topic,
.CS .list .item:nth-child(1) .des,
.CS .list .item:nth-child(1) .buttons{
    transform: translateY(50px);
    filter: blur(20px);
    opacity:0;
    animation: showContent 0.5s 1s linear 1 forwards;
}

@keyframes showContent {
    to{
        opacity:1;
        filter:blur(0);
        transform:translateY(0); /*returns the content to the og position*/
    }
}

/*tinker with these values until desired results*/

.CS .list .item:nth-child(1) .title{
    animation-delay:1s;
}

.CS .list .item:nth-child(1) .topic{
    animation-delay:1.2s;
}

.CS .list .item:nth-child(1) .des{
    animation-delay:1.4s;
}

.CS .list .item:nth-child(1) .buttons{
    animation-delay:1.6s;
}

/*enlarging effect when user clicks on the next/prev buttons*/

.CS.next .list .item:nth-child(1) img{
    width:150px;
    height:220px;
    position:absolute;
    left:50%;
    bottom:50px;
    border-radius:20px;
    animation: showImage 0.5s linear 1 forwards;
}

@keyframes showImage{
    to{
        width:100%;
        height:100%;
        left:0;
        bottom:0;
        border-radius:0;
    }
}

/*make the thumbnail push more natural*/

.CS.next .thumbnail .item:nth-last-child(1){
    width:0;
    overflow:hidden;
    animation: showThumbnail .5s linear 1 forwards;
}

@keyframes showThumbnail{
    to{
        width:150px;
    }
}

.CS.next .thumbnail{
    transform: translateX(150px);
    animation: transformThumbnail .5s linear 1 forwards;
}

@keyframes transformThumbnail{
    to{
        transform: translateX(0);
    }
}

/*effect on clicking prev*/

.CS.prev .list .item:nth-child(2){
    z-index:2;
}

.CS.prev .list .item:nth-child(2) img{
    position:absolute;
    bottom:0;
    left:0;
    animation: outImage .5s linear 1 forwards;
}

@keyframes outImage{
    to{
        width:150px;
        height:220px;
        border-radius:20px;
        left:50%;
        bottom:50px;
    }
}

.CS.prev .thumbnail .item:nth-child(1){
    width:0;
    overflow:hidden;
    opacity:0;
    animation: showThumbnail .5s linear 1 forwards;
}

.CS.prev .list .item:nth-child(2) .author,
.CS.prev .list .item:nth-child(2) .title,
.CS.prev .list .item:nth-child(2) .topic,
.CS.prev .list .item:nth-child(2) .des,
.CS.prev .list .item:nth-child(2) .buttons{
    animation: contentOut 1.5s linear 1 forwards;
}

/*author, title, topic etc that would otherwise be shown
are hidden using this animation, it creates a nice transition
effect*/
@keyframes contentOut{
    to{
        transform: translateY(-150px);
        filter: blur(20px);
        opacity:0;
    }
}

.CS.next .arrows button,
.CS.prev .arrows button{
    pointer-events:none;
}

.time{
    width:100%;
    height:5px;
    position:absolute;
    z-index:100;
    top:0;
    left:0;
}

.CS.next .time,
.CS.prev .time{
    width:100%;
    animation: timeRunning 2s linear 1 forwards;
}

@keyframes timeRunning{
    to{
        width:0;
    }
}

/*for mobile*/
@media screen and(max-width:678px) {
    .CS .list .item .content{
        padding-right:0;
    }

    .CS .list .item .content .title{
        font-size:30px;
    }
}

/* .banner{
    width:100%;
    height:100vh;
    position: relative;
    overflow:hidden;
    background:linear-gradient(to right ,black, white);
}

.banner .slide{
    position:absolute;
    width:50px;
    height:50px;
    top:10%;
    left:calc(55% - 100px);
    object-fit: hidden;
    transform-style:preserve-3d;
    transform:perspective(1000px);
    animation:autoRun 20s linear infinite;
}

@keyframes autoRun{
    from{
        transform:perspective(1000px)rotateX(-10deg) rotateY(0deg);
    }

    to{
        transform:perspective(1000px) rotateX(-10deg) rotateY(360deg);
    }
}

.banner .slide .rotation{
    position:absolute;
    inset:0 0 0 0;
    transform:rotateY(calc( (var(--position) - 1) * (360 / var(--quantity)) * 1deg))
        translateZ(300px);
}

.banner .slide .rotation img{
    width:100%;
    height:100%;
    object-fit: hidden;
    box-shadow: 0 0 0 white;
} */